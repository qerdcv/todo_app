// Code generated by sqlc. DO NOT EDIT.
// source: queries.sql

package db

import (
	"context"
	"database/sql"
)

const createTodo = `-- name: CreateTodo :exec
INSERT INTO todos (
    text
) VALUES (
    $1
)
`

func (q *Queries) CreateTodo(ctx context.Context, text sql.NullString) error {
	_, err := q.exec(ctx, q.createTodoStmt, createTodo, text)
	return err
}

const deleteTodo = `-- name: DeleteTodo :exec
DELETE FROM todos
WHERE id = $1
`

func (q *Queries) DeleteTodo(ctx context.Context, id sql.NullInt32) error {
	_, err := q.exec(ctx, q.deleteTodoStmt, deleteTodo, id)
	return err
}

const listTodos = `-- name: ListTodos :many
SELECT id, text FROM todos
ORDER BY id
`

func (q *Queries) ListTodos(ctx context.Context) ([]Todo, error) {
	rows, err := q.query(ctx, q.listTodosStmt, listTodos)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Todo
	for rows.Next() {
		var i Todo
		if err := rows.Scan(&i.ID, &i.Text); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
